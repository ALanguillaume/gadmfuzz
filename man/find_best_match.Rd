% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gadmfuzz.R
\name{find_best_match}
\alias{find_best_match}
\title{Match GADM polygon entries with local region names}
\usage{
find_best_match(region_names, gadm_country_sf)
}
\arguments{
\item{region_names}{A character vector holding the unique region names to be matched
against their GADM counterparts.}

\item{gadm_country_sf}{A sf object holding GADM geometries for a given country.
This must correspond to GADM level 1 or 2. That is geometries of sub-regions
not only country borders (GADM level 0).}
}
\value{
A tibble holding the fuzzy matching results with 4 columns:
\itemize{
\item \code{regional_stats}: The name of the regions in your data set.
\item \code{gadm}: The best corresponding match among all possible GADM region names for the
country of interest.
\item \code{dist}: The distance between each entry in \code{regional_stats} and \code{gadm}. This is unit less.
0 correspond to a perfect match, 1 to a complete mismatch (no overlap).
\item \code{id_region}: The GADM region id. This corresponds to \verb{GID_\{1|2\}} in GADM polygons.
}
}
\description{
Match GADM polygon entries with local region names provided in other data sets.
It does so using fuzzy string matching. It is especially useful for countries
not using the latin alphabet for which GADM provides a list of possible
transliterated English spellings.
}
\examples{
egy_governorates <- unique(wheat_yield_EGY$governorate)
gadmfuzz::find_best_match(region_names = egy_governorates,
                          gadm_country_sf = gadm36_EGY_1_sf)

}
